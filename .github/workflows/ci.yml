name: ci-develop

on:
  pull_request:
    branches:
      - develop

env:
  JAVA_VERSION: "17"
  MAVEN_VERSION: "3.9.8"
  REGISTRY: hcbtechsolutions

jobs:
  establishment-service:
    name: Establishment Service
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "maven"
          cache-dependency-path: "**/pom.xml"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build
        working-directory: ./parking-lots-management/establishment-service
        run: mvn -B clean package -DskipTests --no-transfer-progress

      - name: Test
        working-directory: ./parking-lots-management/establishment-service
        run: mvn -B clean test --no-transfer-progress

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Dokcker image
        uses: docker/build-push-action@v6
        env:
          IMAGE: ${{ env.REGISTRY }}/establishment-service
        with:
          context: ./parking-lots-management/establishment-service
          push: true
          tags: ${{ env.IMAGE }}:${{ steps.generate_tag.outputs.sha }} , ${{ env.IMAGE }}:latest

  vehicle-service:
    name: Vehicle Service
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "maven"
          cache-dependency-path: "**/pom.xml"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build
        working-directory: ./parking-lots-management/vehicle-service
        run: mvn -B clean package -DskipTests --no-transfer-progress

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Dokcker image
        uses: docker/build-push-action@v6
        env:
          IMAGE: ${{ env.REGISTRY }}/vehicle-service
        with:
          context: ./parking-lots-management/vehicle-service
          push: true
          tags: ${{ env.IMAGE }}:${{ steps.generate_tag.outputs.sha }} , ${{ env.IMAGE }}:latest

  parking-control-service:
    name: Parking Control Service
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "maven"
          cache-dependency-path: "**/pom.xml"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build
        working-directory: ./parking-lots-management/parking-control-service
        run: mvn -B clean package -DskipTests --no-transfer-progress

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Dokcker image
        uses: docker/build-push-action@v6
        env:
          IMAGE: ${{ env.REGISTRY }}/parking-control-service
        with:
          context: ./parking-lots-management/parking-control-service
          push: true
          tags: ${{ env.IMAGE }}:${{ steps.generate_tag.outputs.sha }} , ${{ env.IMAGE }}:latest

  eureka-discovery-service:
    name: Eureka Discovery Service
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "maven"
          cache-dependency-path: "**/pom.xml"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build
        working-directory: ./parking-lots-management/eureka-discovery-service
        run: mvn -B clean package -DskipTests --no-transfer-progress

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Dokcker image
        uses: docker/build-push-action@v6
        env:
          IMAGE: ${{ env.REGISTRY }}/eureka-discovery-service
        with:
          context: ./parking-lots-management/eureka-discovery-service
          push: true
          tags: ${{ env.IMAGE }}:${{ steps.generate_tag.outputs.sha }} , ${{ env.IMAGE }}:latest
