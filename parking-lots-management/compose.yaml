services:
  rabbitmq:
    image: rabbitmq:3.13.6-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      TZ: America/Sao_Paulo
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    hostname: rabbitmq
    networks:
      - app
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    tty: true
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  postgres:
    image: postgres:16.2-alpine3.19
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=establishment
      - TZ=America/Sao_Paulo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U establishment"]
      interval: 5s
      timeout: 10s
      retries: 5
    hostname: postgres
    networks:
      - postgres
    ports:
      - 5432:5432
    restart: always
    tty: true
    volumes:
      - postgresql:/var/lib/postgresql/data

  mongo:
    image: mongo:7.0.5
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - TZ=America/Sao_Paulo
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 5
    hostname: mongo
    networks:
      - mongo
    ports:
      - 27017:27017
    restart: always
    tty: true
    volumes:
      - mongodb:/data/db

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=parking-control
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=America/Sao_Paulo
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    hostname: mysql
    networks:
      - mysql
    ports:
      - 3306:3306
    restart: always
    tty: true
    volumes:
      - mysql:/var/lib/mysql

  establishment-service:
    image: hcbtechsolutions/establishment-service
    build:
      context: ./establishment-service
      dockerfile: Dockerfile
    container_name: establishment-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/establishment
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASS}
      - TZ=America/Sao_Paulo
    hostname: establishment-service
    networks:
      - postgres
      - app
    ports:
      - 8010:8010
    restart: always
    tty: true

  vehicle-service:
    image: hcbtechsolutions/vehicle-service
    build:
      context: ./vehicle-service
      dockerfile: Dockerfile
    container_name: vehicle-service
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongo:27017/
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASS}
      - TZ=America/Sao_Paulo
    hostname: vehicle-service
    networks:
      - mongo
      - app
    ports:
      - 8020:8020
    restart: always
    tty: true

  parking-control-service:
    image: hcbtechsolutions/parking-control-service
    build:
      context: ./parking-control-service
      dockerfile: Dockerfile
    container_name: parking-control-service
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/parking-control
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASS}
      - TZ=America/Sao_Paulo
    hostname: parking-control-service
    networks:
      - mysql
      - app
    ports:
      - 8030:8030
    restart: always
    tty: true

networks:
  postgres:
    driver: bridge
  mongo:
    driver: bridge
  mysql:
    driver: bridge
  app:
    driver: bridge

volumes:
  postgresql:
  mongodb:
  mysql:
  rabbitmq:
